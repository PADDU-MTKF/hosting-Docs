
Reference Link
	
	https://www.codewithharry.com/blogpost/django-deploy-nginx-gunicorn/    ---------------------------------------------------------------------- Master Reference
	https://docs.vultr.com/how-to-deploy-fastapi-applications-with-gunicorn-and-nginx-on-ubuntu-20-04     ---------------------------------------- Dont create virtual env according to this 
	https://saurabh-nakoti.medium.com/deploying-fastapi-application-on-a-linux-server-with-gunicorn-and-nginx-f2d9bdb7a262


if discarding 
	/etc/nginx/sites-enabled
	/etc/nginx/sites-available
	/etc/systemd/system
	
	/project/dir

Basic Linux Commands

	Make Directory  :- mkdir name
	change Directory:- cd name or cd .. to go back
	remove folder with files :- sudo rm -rf folderName



while using Linux Always Make Sure To 

	sudo apt update
	sudo apt upgrade


First Time

	sudo apt install python3-pip python3-dev nginx
	sudo pip3 install virtualenv
	
	sudo ufw allow 8000 
	
	sudo nano /etc/nginx/nginx.conf
		and change 
			user www-data 
			to 
			user UserName 
		in first line 




Creating Virtual env in folder of each project

	virtualenv env
	source env/bin/activate


[ Then perform pip install ........... ]




Loging To VPS
            ssh root@your_server_ip
        creating Root User

        adduser UserName
        usermod -aG sudo UserName 

        Seting UP FireWall 

            allowing ssh to the vps
                sudo apt-get install ssh
                ufw allow OpenSSH
            
            enable firewall
                ufw enable
        
        After This Never Login Using root Use
            ssh UserName@your_server_ip




			

Django ***********************************************************************************

	NOTE :- ProjectFolderName and ProjectName can be kept same or different
	

	// setting the project folder
	
		mkdir ~/ProjectFolderName
		cd ~/ProjectFolderName
		
		virtualenv env
		source env/bin/activate
		pip install django gunicorn
		
		
		django-admin startproject AppName ~/ProjectFolderName
		
		
		~/ProjectFolderName/manage.py makemigrations
		~/ProjectFolderName/manage.py migrate
		
		~/ProjectFolderName/manage.py runserver 0.0.0.0:8000
		
		gunicorn --bind 0.0.0.0:8000 AppName.wsgi
		
		deactivate
		
		
	
	// configuring gunicorn
	
		sudo nano /etc/systemd/system/ProjectName.socket
		
		// inside the file add
			
		[Unit]
		Description=gunicorn socket
		
		[Socket]
		ListenStream=/run/ProjectName.sock
		
		[Install]
		WantedBy=sockets.target
		
		
		// save by pressing ctr+x then y then Enter
		
		
		sudo nano /etc/systemd/system/ProjectName.service
		
		// inside the file add 
		
		[Unit]
		Description=gunicorn daemon
		Requires=ProjectName.socket
		After=network.target
		
		[Service]
		User=UserName
		Group=www-data
		WorkingDirectory=/home/UserName/ProjectFolderName
		ExecStart=/home/UserName/ProjectFolderName/env/bin/gunicorn \
		          --access-logfile - \
		          --workers 3 \
		          --bind unix:/run/ProjectName.sock \
		          AppName.wsgi:application
		
		[Install]
		WantedBy=multi-user.target
	
		// save by pressing ctr+x then y then Enter
		
		
		sudo systemctl start ProjectName.socket
		sudo systemctl enable ProjectName.socket
		
	
	// Configuring Nginx
	
		sudo nano /etc/nginx/sites-available/ProjectName
		
		// inside the file add 
		
		server {
		    listen 80;
		    server_name www.lazythinkers.in;
		
		    location = /favicon.ico { access_log off; log_not_found off; }
		    location /static/ {
		        root /home/UserName/ProjectFolderName;
		    }
		
		    location / {
		        include proxy_params;
		        proxy_pass http://unix:/run/ProjectName.sock;
		    }
		}
		
		// save by pressing ctr+x then y then Enter
		
		sudo ln -s /etc/nginx/sites-available/ProjectName /etc/nginx/sites-enabled/
		
		sudo systemctl restart nginx










Fast API ***********************************************************************************

	
	// setting the project folder
	
		mkdir ~/ProjectFolderName
		cd ~/ProjectFolderName
		
		virtualenv env
		source env/bin/activate
		
		pip install fastapi[all] gunicorn
		
		
		nano app.py
		// inside the file add 
	
		
			from fastapi import FastAPI
			app = FastAPI()
			
			
			@app.get("/")
			async def home():
			    return {"message": "Hello World"}
			
		
		// save by pressing ctr+x then y then Enter


		// Test if the api works 
		
			uvicorn --port 8003 app:app
		
		
		// Test if the api works with gunicorn
		
			gunicorn -b :8000 -k uvicorn.workers.UvicornWorker app:app
		
		
		// Add required files for gunicorn inside project folder
		
			nano gunicorn_conf.py
			// inside the file add 
		
			
				from multiprocessing import cpu_count
				
				# Socket Path
				bind = 'unix:/home/UserName/ProjectFolderName/gunicorn.sock'
				
				# Worker Options
				workers = cpu_count() + 1
				worker_class = 'uvicorn.workers.UvicornWorker'
				
				# Logging Options
				loglevel = 'debug'
				accesslog = '/home/UserName/ProjectFolderName/access_log'
				errorlog =  '/home/UserName/ProjectFolderName/error_log'
			
			
			// save by pressing ctr+x then y then Enter

			
	
	// configuring gunicorn
		
		sudo nano /etc/systemd/system/ProjectName.service
		// inside the file add 
		
			[Unit]
			Description=Gunicorn Daemon for FastAPI Demo Application
			After=network.target
			
			[Service]
			User=UserName
			Group=www-data
			WorkingDirectory=/home/UserName/ProjectFolderName
			ExecStart=/home/UserName/ProjectFolderName/env/bin/gunicorn -c gunicorn_conf.py app:app
			
			[Install]
			WantedBy=multi-user.target
		
		// save by pressing ctr+x then y then Enter

		
		
		sudo systemctl daemon-reload
		sudo systemctl start ProjectName
		sudo systemctl enable ProjectName
		
		sudo systemctl status ProjectName
		
		
		
	//  Configuring Nginx
		
		sudo nano /etc/nginx/sites-available/ProjectName
		// inside the file add 
		
		
			 server {
			    listen 8002;
			    server_name 172.19.15.23;
			
			    location / {
			        include proxy_params;
			        proxy_pass http://unix:/home/UserName/ProjectFolderName/gunicorn.sock;
			    }
			
			    location /static/ {
			        alias /home/UserName/ProjectFolderName/static/;
			    }
			}
		
		// save by pressing ctr+x then y then Enter


		
		sudo ln -s /etc/nginx/sites-available/ProjectName /etc/nginx/sites-enabled/
		sudo nginx -t
		
		sudo systemctl reload nginx

		
